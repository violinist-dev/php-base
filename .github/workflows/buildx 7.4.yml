name: buildx 7.4

on:
  schedule:
    - cron: '0 10 * * *' # everyday at 10am
  push:
    branches: main

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=violinist/php-base
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
            name: Docker Login
            if: success() && github.event_name != 'pull_request'
            env:
              DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
              DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            run: |
              echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
      -
        name: Docker Buildx (build)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }} -t violinist/php-base:7.4-multi -f Dockerfile-74 .
      -
        name: Docker Check Manifest
        if: always() && github.event_name != 'pull_request'
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:7.4-multi
      -
        name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json

      - name: Trigger Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: 'update-check-runner',
              workflow_id: 'buildx 7.4.yml',
              ref: 'main',
            })

      - name: Trigger docs Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: 'docs',
              workflow_id: 'extensions-up-to-date.yml',
              ref: 'master',
            })
